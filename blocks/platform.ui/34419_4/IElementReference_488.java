package org.eclipse.ui.commands;

import java.util.Collection;
import java.util.Map;

import org.eclipse.core.commands.Category;
import org.eclipse.core.commands.Command;
import org.eclipse.core.commands.CommandManager;
import org.eclipse.core.commands.IExecutionListener;
import org.eclipse.core.commands.IHandler;
import org.eclipse.core.commands.ParameterType;
import org.eclipse.core.commands.ParameterizedCommand;
import org.eclipse.core.commands.SerializationException;
import org.eclipse.core.commands.common.NotDefinedException;
import org.eclipse.ui.menus.UIElement;
import org.eclipse.ui.services.IDisposable;

public interface ICommandService extends IDisposable {

	public static final String AUTOGENERATED_CATEGORY_ID = CommandManager.AUTOGENERATED_CATEGORY_ID;

	public void addExecutionListener(IExecutionListener listener);

	public void defineUncategorizedCategory(String name, String description);

	public ParameterizedCommand deserialize(
			String serializedParameterizedCommand) throws NotDefinedException,
			SerializationException;

	public Category getCategory(String categoryId);

	public Command getCommand(String commandId);

	public Category[] getDefinedCategories();

	public Collection getDefinedCategoryIds();

	public Collection getDefinedCommandIds();

	public Command[] getDefinedCommands();

	public Collection getDefinedParameterTypeIds();

	public ParameterType[] getDefinedParameterTypes();

	public String getHelpContextId(Command command) throws NotDefinedException;

	public String getHelpContextId(String commandId) throws NotDefinedException;

	public ParameterType getParameterType(String parameterTypeId);

	public void readRegistry();

	public void removeExecutionListener(IExecutionListener listener);

	public void setHelpContextId(IHandler handler, String helpContextId);

	public IElementReference registerElementForCommand(
			ParameterizedCommand command, UIElement element)
			throws NotDefinedException;

	public void registerElement(IElementReference elementReference);

	public void unregisterElement(IElementReference elementReference);

	public void refreshElements(String commandId, Map filter);
}
